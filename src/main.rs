use std::env;
use std::{fs, fs::read_dir};
use std::process::exit;
use anvil_region::AnvilChunkProvider;
use clap::{Arg, App, SubCommand};

use nbt::Result;
use nbt::Blob;

fn run(input: &str, output: &str) -> Result<()> {
    let chunk_provider = AnvilChunkProvider::new(&output);
    let reader = std::fs::read_dir(input)?;
    for entry in reader {
        dbg!(entry);
    }
    Ok(())
}

fn main() {
    let matches = App::new("dump-to-map")
        .arg(
            Arg::with_name("output")
                .help("A valide minecraft 1.15 world that will be patched")
                .short("o")
                .required(true)
                .takes_value(true)
        )
        .arg(
            Arg::with_name("input")
                .help("A directory containing JOSN chunk dump generated by cort2bot")
                .short("i")
                .required(true)
                .takes_value(true)
        )
        .get_matches();
    let output = matches.value_of("output").unwrap();
    let input = matches.value_of("input").unwrap();
    if let Err(e) = run(input, output) {
        eprintln!("{}", e);
    }
}
